# GRAPE Execution and Result Visualization
# Filename: scenario1_grape_run_and_plot.py
# Requirement: This script must be executed inside the 'space-simulator' directory

import os
from pathlib import Path
import pandas as pd
import matplotlib.pyplot as plt
from collections import Counter

# Step 0: Check if the script is being run from the correct directory
if not Path("run.py").exists():
    raise EnvironmentError("This script must be run from inside the 'space-simulator' directory.")

# Step 1: Execute GRAPE algorithm using the predefined configuration file
CONFIG_FILE = "config/scenario1_grape.yaml"
if not Path(CONFIG_FILE).exists():
    raise FileNotFoundError(f"Missing configuration file: {CONFIG_FILE}")

os.system(f"python run.py --config {CONFIG_FILE}")

# Step 2: Find the latest result file generated by GRAPE (agentwise.csv)
def find_latest_grape_result():
    latest = None
    for root, _, files in os.walk("."):
        for f in files:
            if "grape" in root.lower() and f.endswith("agentwise.csv"):
                candidate = Path(root) / f
                if not latest or candidate.stat().st_mtime > latest.stat().st_mtime:
                    latest = candidate
    return latest

csv_path = find_latest_grape_result()
if not csv_path:
    raise FileNotFoundError("No GRAPE result file (agentwise.csv) found.")

# Step 3: Load the result file and inspect columns
df = pd.read_csv(csv_path)
print("\nColumns:", df.columns.tolist())
print(df.head())

# Step 4: Automatically detect the column related to 'task' assignment
task_col = next((col for col in df.columns if "task" in col.lower()), None)
if not task_col:
    raise ValueError("No column containing 'task' found in result file.")

# Step 5: Visualize number of agents assigned per Task ID
task_counts = Counter(df[task_col])
tasks = sorted(task_counts.keys())
counts = [task_counts[t] for t in tasks]

plt.figure(figsize=(10, 5))
plt.bar(tasks, counts, color='skyblue', edgecolor='black')
plt.title("GRAPE Result: Number of Agents per Task")
plt.xlabel("Task ID")
plt.ylabel("Number of Agents")
plt.grid(True)
plt.tight_layout()
plt.show()

